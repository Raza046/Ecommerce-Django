# Generated by Django 5.1.3 on 2025-04-01 14:30

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("Cart", "0003_alter_cart_customer"),
        ("Products", "0004_alter_variationvalue_value"),
        ("UserAccount", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="coupon",
            name="is_expired",
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name="cart",
            name="coupon",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="Cart.coupon",
                verbose_name="cart_coupon",
            ),
        ),
        migrations.AlterField(
            model_name="cart",
            name="customer",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="customer_cart",
                to="UserAccount.users",
            ),
        ),
        migrations.AlterField(
            model_name="cartitem",
            name="Prod_Var",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="Products.productvariations",
                verbose_name="prod_variant",
            ),
        ),
        migrations.AlterField(
            model_name="cartitem",
            name="cart",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="cart_items",
                to="Cart.cart",
                verbose_name="cart_items",
            ),
        ),
        migrations.AlterField(
            model_name="coupon",
            name="active",
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name="coupon",
            name="user",
            field=models.ManyToManyField(
                blank=True,
                related_name="coupons",
                to="UserAccount.users",
                verbose_name="customer_coupon",
            ),
        ),
    ]
